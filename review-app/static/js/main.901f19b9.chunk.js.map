{"version":3,"sources":["assets/images/image1.jpg","components/Layout/Layout.tsx","styled/LineSeparator.tsx","constants/colors.ts","api/apiCalls.ts","mockedData/reviews.ts","components/Loading/Loading.tsx","styled/SmallText.tsx","components/ReviewHeader/ReviewHeader.tsx","styled/Review.tsx","components/MyReview/MyReview.tsx","components/Review/Review.tsx","pages/Reviews/Reviews.tsx","mockedData/myReview.ts","components/Modal/Modal.tsx","pages/MyReview/MyReview.tsx","pages/Error404/Error404.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","__webpack_require__","p","Layout","props","react_default","a","createElement","children","LineSeparator","styled","hr","_templateObject","timeout","ms","Promise","resolve","setTimeout","generateRandomNumber","minValue","maxValue","randomNumber","Math","random","floor","availableReview","displayName","myReview","reviews","reviewerPhoto","undefined","reviewerName","reviewScore","reviewTime","reviewComment","getFirmReviews","_ref","Object","asyncToGenerator","regenerator_default","mark","_callee","firmId","waitFor","wrap","_context","prev","next","console","log","concat","abrupt","stop","this","_x","apply","arguments","saveMyReview","_ref3","_callee2","_ref2","_context2","assign","success","_x2","LoaderOverlay","div","Loading_templateObject","LoaderWrapper","_templateObject2","Loading","loading","styled_spinkit_esm","SmallText","span","SmallText_templateObject","ReviewHeaderWrapper","ReviewHeader_templateObject","AverageScore","ReviewHeader_templateObject2","RatingsCounter","_templateObject3","ViewAllReviews","_templateObject4","ReviewHeader","averageReview","styled_SmallText","noOfReviews","ReviewWraper","Review_templateObject","UserImage","Review_templateObject2","ProfilePhoto","img","Review_templateObject3","UserReviewWrapper","Review_templateObject4","UserName","_templateObject5","StarsWrapper","_templateObject6","TimeWrapper","_templateObject7","Comment","_templateObject8","RateReview","MyReview_templateObject","BigStar","MyReview_templateObject2","NoComment","MyReview_templateObject3","withRouter","onStarClick","value","history","push","firmName","onCommentClick","src","Profile","react_fontawesome_index_es","icon","react_star_rating_component_default","name","editing","moment","fromNow","onClick","starIconDefinition","findIconDefinition","prefix","iconName","renderStarIcon","noReview","Review","starCount","ReviewPage","Reviews_templateObject","FirmName","h2","Reviews_templateObject2","h5","Reviews_templateObject3","Reviews","match","params","_useState","useState","_useState2","slicedToArray","reviewsData","setReviewsData","useEffect","then","data","catch","components_Loading_Loading","components_ReviewHeader_ReviewHeader","styled_LineSeparator","components_MyReview_MyReview","map","index","key","components_Review_Review","length","Reviews_ViewAllReviews","color","reviewName","ModalOverlay","Modal_templateObject","show","ModalWrapper","Modal_templateObject2","Title","h3","Modal_templateObject3","Content","Modal_templateObject4","Button","button","Modal_templateObject5","Modal","title","content","onButtonClick","defaultProps","MyReviewPage","MyReview_MyReview_templateObject","HeaderWrapper","MyReview_MyReview_templateObject2","MyReview_MyReview_templateObject3","MyReview_templateObject4","MyReview_templateObject5","ContentWrapper","MyReview_templateObject6","BigStarEmpty","MyReview_templateObject7","BigStarFull","MyReview_templateObject8","StarExplained","_templateObject9","NameInput","input","_templateObject10","CommentTextarea","textarea","_templateObject11","MyReview","query","queryString","parse","location","search","String","setName","_useState3","_useState4","comment","setComment","_useState5","Number","score","_useState6","setScore","_useState7","_useState8","showLoader","setShowLoader","_useState9","_useState10","showModal","setShowModal","farStarIconDefinition","fasIconDefinition","components_Modal_Modal","MyReview_Button","goBack","MyReview_FirmName","MyReview_StarsWrapper","5","4","3","2","1","placeholder","onChange","event","target","Error404","library","add","faUserCircle","farStar","fasStar","App","BrowserRouter","basename","process","components_Layout_Layout","Switch","Redirect","exact","from","to","Route","path","component","Boolean","window","hostname","rootEl","document","getElementById","ReactDOM","render","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.901f19b9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/image1.db7692aa.jpg\";","import React from 'react';\n\n// import Header from 'components/Header/Header';\n// import Footer from 'components/Footer/Footer';\n\ninterface Props {\n    children: React.ReactNode;\n}\n\nconst Layout = (props: Props): React.ReactElement<Props> => (\n    <div>\n        {/* <Header /> */}\n        <main>{props.children}</main>\n        {/* <Footer /> */}\n    </div>\n);\n\nexport default Layout;\n","import styled from 'styled-components';\n\nimport { PINK_SWAN } from 'constants/colors';\n\nconst LineSeparator = styled.hr`\n    display: block;\n    height: 1px;\n    border: 0;\n    border-top: 1px solid ${PINK_SWAN}57;\n    margin: 0.5rem 0;\n    padding: 0; \n`;\n\nexport default LineSeparator;","export const DODGER_BLUE = '#19A0EF'\nexport const TANGERINE_YELLOW = '#FECD03';\nexport const PINK_SWAN = '#B3B3B3';\nexport const WHITE_SMOKE = '#F5F5F5';","import axios from 'axios';\n\nimport { POST_FIRM_DATA } from 'constants/api';\nimport { reviews } from 'mockedData/reviews';\nimport { MyReview } from 'components/MyReview/MyReview';\n\nconst timeout = (ms: number): Promise<void> => new Promise(resolve => setTimeout(resolve, ms));\n\nconst generateRandomNumber = (minValue: number , maxValue: number): number => {\n    let randomNumber = Math.random() * (maxValue - minValue) + minValue;\n    return Math.floor(randomNumber);\n};\n\nlet availableReview = (() => reviews)();\n\nexport const getFirmReviews = async (firmId: string): Promise<any> => {\n    const waitFor = generateRandomNumber(500,2000);\n    console.log(`Getting reviews for: ${firmId}, it will take ${waitFor}ms`);\n    await timeout(waitFor);\n    return availableReview;\n};\n\nexport const saveMyReview = async ({ firmId, myReview }: { firmId: string; myReview: MyReview }): Promise<{ success: boolean }> => {\n    // Save request is blocked by CORS on github.io\n    // const formData = new FormData();\n    // formData.set('score', String(myReview.reviewScore));\n    // formData.set('companyId', firmId);\n    // formData.set('comment', myReview.reviewComment || '');\n    // formData.set('userName', myReview.reviewerName || '');\n    //\n    // const response = await axios.post(POST_FIRM_DATA,\n    //     formData,\n    //     {\n    //     headers: {\n    //         'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8',\n    //         'X-HITTA-DEVICE-NAME': 'MOBILE_WEB',\n    //         'X-HITTA-SHARED-IDENTIFIER': 15188693697264027,\n    //\n    //     }\n    // });\n    // if (/'^2'/.test(String(response.status))) {\n    //     Object.assign(availableReview, { myReview });\n    // }\n    const waitFor = generateRandomNumber(500,2000);\n    console.log(`Save my review for: ${firmId}, it will take: ${waitFor}ms`);\n    await timeout(waitFor);\n    Object.assign(availableReview, { myReview });\n\n    return { success: true }\n};","export const reviews = {\n    displayName: 'Pizzeria Mamma Mia',\n    myReview: {},\n    reviews: [\n        {\n            reviewerPhoto: undefined,\n            reviewerName: undefined,\n            reviewScore: 4,\n            reviewTime: 1549359793537,\n            reviewComment: 'Liked it very much - probably one of the best thai restaurants in the city - recommended!',\n        },\n        {\n            reviewerPhoto: undefined,\n            reviewerName: 'Jenny Svensson',\n            reviewScore: 3,\n            reviewTime: 1549353793537,\n            reviewComment: 'Maybe a bit too fast food. I personally dislike that. Good otherwise.',\n        },\n        {\n            reviewerPhoto: 'photo',\n            reviewerName: 'happy56',\n            reviewScore: 5,\n            reviewTime: 1549242793537,\n            reviewComment: 'Super good! Love the food!',\n        },\n    ],\n};","import React, { ReactNode } from 'react';\nimport { CubeGrid } from 'styled-spinkit';\nimport styled from 'styled-components';\n\nconst LoaderOverlay = styled.div`\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    background-color: #FFFFFF80;\n    z-index: 100;\n`;\n\nconst LoaderWrapper = styled.div`\n    position: absolute;\n    top: calc(50% - 60px);\n    left: calc(50% - 20px);\n`;\n\ninterface Props {\n    loading: boolean;\n    children?: ReactNode;\n}\n\nconst Loading = (props: Props): React.ReactElement<Props> => {\n    const { loading, children } = props;\n    return (\n        <div>\n            {loading ?\n                <LoaderOverlay>\n                    <LoaderWrapper>\n                        <CubeGrid />\n                    </LoaderWrapper>\n                </LoaderOverlay> : children }\n        </div>\n    );\n}\n\nexport default Loading;\n","import styled from 'styled-components';\n\nimport { PINK_SWAN } from 'constants/colors';\n\nconst SmallText = styled.span`\n    color:  ${PINK_SWAN};\n    font-size: 12px;\n`;\n\nexport default SmallText;","import React from 'react';\nimport styled from 'styled-components';\n\nimport { TANGERINE_YELLOW, DODGER_BLUE } from 'constants/colors';\nimport SmallText from 'styled/SmallText';\n\nconst ReviewHeaderWrapper = styled.div`\n    width: 100%;\n`\n\nconst AverageScore = styled.div`\n    display: inline-flex;\n    background-color: ${TANGERINE_YELLOW};\n    width: 2rem;\n    height: 2rem;\n    justify-content: center;\n    flex-direction: column;\n    text-align: center;\n    border-radius: 0.5rem;\n`\nconst RatingsCounter = styled.div`\n    display: inline-flex;\n    margin-left: 0.5rem;\n    justify-content: center;\n    flex-direction: column;\n    width: 7rem;\n`;\n\nconst ViewAllReviews = styled.div`\n    display: inline-flex;\n    justify-content: center;\n    flex-direction: column;\n    text-align: right;\n    width: calc(100% - 10rem);\n    font-size: 14px;\n    color: ${DODGER_BLUE};\n`;\n\ninterface Props {\n    averageReview: number;\n    noOfReviews: number;\n}\n\nconst ReviewHeader = (props: Props): React.ReactElement<Props> => (\n    <ReviewHeaderWrapper>\n        <AverageScore>{props.averageReview}</AverageScore>\n        <RatingsCounter>\n            <SmallText>from {props.noOfReviews} ratings</SmallText>\n        </RatingsCounter>\n        <ViewAllReviews>View all reviews</ViewAllReviews>\n    </ReviewHeaderWrapper>\n);\n\nexport default ReviewHeader;\n","import styled from 'styled-components';\n\nimport { PINK_SWAN, DODGER_BLUE } from 'constants/colors';\n\nexport const ReviewWraper = styled.div`\n    width: 100%;\n`;\n\nexport const UserImage = styled.div`\n    display: inline-block;\n    font-size: 35px;\n    color: ${PINK_SWAN};\n    width: 1em;\n    height: 1em;\n    vertical-align: top;\n    margin-right: 0.6rem;\n    & svg {\n        position: absolute;\n    }\n`;\n\nexport const ProfilePhoto = styled.img`\n    width: 100%;\n    height: 100%;\n    border-radius: 1rem;\n`;\n\nexport const UserReviewWrapper = styled.div`\n    display: inline-block;\n    width: calc(100% - 2.8rem);\n`;\n\nexport const UserName = styled.div`\n    font-size: 14px;\n    font-weight: bold;\n`;\n\nexport const StarsWrapper = styled.div`\n    display: inline-block;\n    font-size: 11px;\n    & .dv-star-rating-empty-star {\n        color: ${PINK_SWAN} !important;\n    }\n`;\n\nexport const TimeWrapper = styled.div`\n    display: inline-block;\n    margin-left: 0.5rem;\n`;\n\nexport const Comment = styled.div`\n    font-size: 12px;\n    margin-top: 0.5rem;\n`;","import React from 'react';\nimport { withRouter, RouteComponentProps  } from 'react-router-dom';\nimport moment from 'moment';\nimport StarRatingComponent from 'react-star-rating-component';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n    IconLookup,\n    IconDefinition,\n    findIconDefinition\n} from '@fortawesome/fontawesome-svg-core'\nimport styled from 'styled-components';\n\nimport { PINK_SWAN, DODGER_BLUE } from 'constants/colors';\nimport SmallText from 'styled/SmallText';\nimport Profile from 'assets/images/image1.jpg';\nimport * as ReviewStyled from 'styled/Review';\n\nconst RateReview = styled.div`\n    font-size: 16px;\n    font-weight: bold;\n`;\n\nconst BigStar = styled.div`\n    display: inline-block;\n    font-size: 34px;\n    text-align: center;\n    padding-right: 1rem;\n    color: ${PINK_SWAN};\n    margin-top: 0.7rem;\n`;\n\nconst NoComment = styled.div`\n    font-size: 15px;\n    margin-top: 0.5rem;\n    color: ${DODGER_BLUE};\n`;\n\nexport interface MyReview {\n    reviewerPhoto?: string;\n    reviewerName?: string;\n    reviewScore?: number;\n    reviewTime?: number;\n    reviewComment?: string;\n}\ninterface Props extends RouteComponentProps, MyReview {\n    firmId: string;\n    firmName: string;\n}\n\nconst MyReview = (props: Props): React.ReactElement<Props> => {\n    const onStarClick = (value: number): void => {\n        props.history.push(`/myreview/${props.firmId}?score=${value}&firmName=${props.firmName}`)\n    };\n\n    const onCommentClick = (): void => {\n        props.history.push(`/myreview/${props.firmId\n        }?score=${props.reviewScore\n        }&firmName=${props.firmName\n        }${props.reviewerName ? `&reviewerName=${props.reviewerName}` : ''}`)\n    };\n    const noReview = (): React.ReactNode => {\n        const starLookup: IconLookup = { prefix: 'far', iconName: 'star' };\n        const starIconDefinition: IconDefinition = findIconDefinition(starLookup);\n        return (\n            <ReviewStyled.UserReviewWrapper>\n                <RateReview>Rate and review</RateReview>\n                <div>\n                    <SmallText>Share your experience to help others</SmallText>\n                </div>\n                <StarRatingComponent\n                    name=\"MyReview\"\n                    value={0}\n                    onStarClick={onStarClick}\n                    renderStarIcon={() => (\n                        <BigStar>\n                            <FontAwesomeIcon icon={starIconDefinition} />\n                        </BigStar>\n                    )}\n                />\n            </ReviewStyled.UserReviewWrapper>\n        )\n    };\n\n    const review = (): React.ReactNode => (\n        <ReviewStyled.UserReviewWrapper>\n            <ReviewStyled.UserName>\n                {props.reviewerName || 'Anonym'}\n            </ReviewStyled.UserName>\n            <ReviewStyled.StarsWrapper>\n                <StarRatingComponent\n                    name=\"MySavedReview\"\n                    value={props.reviewScore || 0}\n                    editing={false}\n                />\n            </ReviewStyled.StarsWrapper>\n            <ReviewStyled.TimeWrapper>\n                <SmallText>\n                    {moment(props.reviewTime).fromNow()} - hitta.se\n                </SmallText>\n            </ReviewStyled.TimeWrapper>\n            <div>\n                {props.reviewComment ?\n                    <ReviewStyled.Comment>{props.reviewComment}</ReviewStyled.Comment>:\n                    <NoComment onClick={onCommentClick}>Describe your experience</NoComment>\n                }\n            </div>\n        </ReviewStyled.UserReviewWrapper>\n    );\n    return (\n        <ReviewStyled.ReviewWraper>\n            <ReviewStyled.UserImage > \n                { props.reviewerPhoto ?\n                    <ReviewStyled.ProfilePhoto src={Profile} /> :\n                    <FontAwesomeIcon icon=\"user-circle\" />\n                }\n            </ReviewStyled.UserImage>\n            {props.reviewScore ? review() : noReview()}\n        </ReviewStyled.ReviewWraper>\n    );\n};\n\nexport default withRouter(MyReview);\n","import React from 'react';\nimport moment from 'moment';\nimport StarRatingComponent from 'react-star-rating-component';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport { ReviewInterface } from 'interfaces/ReviewInterface';\nimport SmallText from 'styled/SmallText';\nimport Profile from 'assets/images/image1.jpg';\nimport * as ReviewStyled from 'styled/Review';\n\nconst Review = (props: ReviewInterface): React.ReactElement<ReviewInterface> => (\n    <ReviewStyled.ReviewWraper>\n        <ReviewStyled.UserImage > \n            { props.reviewerPhoto ?\n                <ReviewStyled.ProfilePhoto src={Profile} /> :\n                <FontAwesomeIcon icon=\"user-circle\" />\n            }\n        </ReviewStyled.UserImage>\n        <ReviewStyled.UserReviewWrapper>\n            <div>\n                <ReviewStyled.UserName>\n                    {props.reviewerName || 'Anonym'}\n                </ReviewStyled.UserName>\n                <ReviewStyled.StarsWrapper>\n                    <StarRatingComponent\n                        name=\"star\"\n                        starCount={5}\n                        editing={false}\n                        value={props.reviewScore}\n                    />\n                </ReviewStyled.StarsWrapper>\n                <ReviewStyled.TimeWrapper>\n                    <SmallText>{moment(props.reviewTime).fromNow()} - hitta.se</SmallText>\n                </ReviewStyled.TimeWrapper>\n            </div>\n            <ReviewStyled.Comment>\n                {props.reviewComment}\n            </ReviewStyled.Comment>\n        </ReviewStyled.UserReviewWrapper>\n    </ReviewStyled.ReviewWraper>\n);\n\nexport default Review;\n","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\n\nimport { DODGER_BLUE } from 'constants/colors';\nimport LineSeparator from 'styled/LineSeparator';\nimport { Match } from 'interfaces/RouteInterface';\nimport { ReviewInterface } from 'interfaces/ReviewInterface'\nimport { getFirmReviews } from 'api/apiCalls';\nimport Loading from 'components/Loading/Loading';\nimport ReviewHeader from 'components/ReviewHeader/ReviewHeader';\nimport MyReview from 'components/MyReview/MyReview';\nimport ReviewComponent from 'components/Review/Review';\n\nconst ReviewPage = styled.div`\n    padding: 1rem;\n`;\n\nconst FirmName = styled.h2`\n    text-align: center;\n`;\n\nconst ViewAllReviews = styled.h5`\n    text-align: center;\n    color: ${DODGER_BLUE};\n`;\n\ninterface Props {\n    match: Match;\n}\n\ninterface State {\n    displayName?: string;\n    myReview?: ReviewInterface;\n    reviews: ReviewInterface[];\n}\n\nconst Reviews = (props: Props): React.ReactElement<Props> => {\n    const { match: { params: { firmId } } } = props;\n\n    const [reviewsData, setReviewsData]: [State, any] = useState({ reviews: [] });\n\n    const showReviews = (): React.ReactNode[] => reviewsData.reviews.map(({\n        reviewerPhoto, reviewerName, reviewScore, reviewTime, reviewComment\n    }, index): React.ReactElement<any> => (\n        <div key={`wrapper_${index}`}>\n            <ReviewComponent\n                key={`review_${index}`}\n                reviewerPhoto={reviewerPhoto}\n                reviewerName={reviewerName}\n                reviewScore={reviewScore}\n                reviewTime={reviewTime}\n                reviewComment={reviewComment}\n            />\n            { index < reviewsData.reviews.length - 1 && <LineSeparator key={`lineseparator_${index}`} />}\n        </div>\n    ));\n    \n    useEffect(() => {\n        getFirmReviews(firmId)\n            .then((data)=> {\n                setReviewsData(data);\n            })\n            .catch(() => {\n            // this should never happen\n            });\n    },\n    [firmId]\n    );\n\n    const { displayName, myReview } = reviewsData;\n\n    return (\n        <Loading loading={!displayName}>\n            <ReviewPage>\n                <FirmName>{displayName}</FirmName>\n                <h3>Reviews</h3>\n                <ReviewHeader averageReview={4.1} noOfReviews={27} />\n                <LineSeparator />\n                <MyReview firmId={firmId} firmName={displayName || ''} {...myReview} />\n                <LineSeparator />\n                <h4>Latest reviews</h4>\n                {showReviews()}\n                <ViewAllReviews color=\"red\">View all reviews</ViewAllReviews>\n            </ReviewPage>\n        </Loading>\n    );\n};\n\nexport default Reviews;\n","interface IReview {\r\n    reviewScore: number,\r\n    reviewName: string,\r\n    reviewComment: string\r\n    reviewTime?: number,\r\n}\r\n\r\nlet myReview: IReview = {\r\n    reviewScore: 0,\r\n    reviewName: '',\r\n    reviewComment: '',\r\n};\r\n\r\nexport const setMyReview = (data: IReview) => myReview = Object.assign({}, data, { reviewTime: (new Date()).getTime() });\r\nexport const getMyReview = () => myReview;","import React, { ReactNode } from 'react';\nimport styled from 'styled-components';\n\nimport { DODGER_BLUE, PINK_SWAN, WHITE_SMOKE } from 'constants/colors';\nimport LineSeparator from 'styled/LineSeparator';\n\ninterface ModalOverlay {\n    show: boolean;\n}\n\nconst ModalOverlay = styled.div`\n    display: ${ (p: ModalOverlay) => p.show ? 'block' : 'none'};\n    background-color: ${PINK_SWAN}80;\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    z-index: 100;\n`;\n\nconst ModalWrapper = styled.div`\n    position: absolute;\n    width: 20rem;\n    min-height: 10rem;\n    background-color: ${WHITE_SMOKE};\n    top: calc(50% - 5rem);\n    left: calc(50% - 10rem);\n    border-radius: 1rem;\n`;\n\nconst Title = styled.h3`\n`;\n\nconst Content = styled.div`\n  padding: 0 1rem;\n`;\n\nconst Button = styled.button`\n    background-color: ${WHITE_SMOKE};\n    border: none;\n    color: ${DODGER_BLUE};\n    font-size: 18px;\n    font-weight: bold;\n    padding: 0;\n    width: 100%;\n    height: 3rem;\n    border-radius: 0 0 1rem 1rem;\n`;\n\ninterface Props {\n    show: boolean;\n    title: string;\n    content: string;\n    onButtonClick(): void;\n}\n\nconst Modal = (props: Props): React.ReactElement<Props> => {\n    return (\n        <ModalOverlay show={props.show}>\n            <ModalWrapper>\n                <Title>{props.title}</Title>\n                <Content>{props.content}</Content>\n                <LineSeparator />\n                <Button onClick={props.onButtonClick}>Okay!</Button>\n            </ModalWrapper>\n        </ModalOverlay>\n    );\n}\n\nModal.defaultProps = {\n    show: true,\n}\n\nexport default Modal;\n","import React, { useState } from 'react';\nimport { RouteComponentProps  } from 'react-router-dom';\nimport queryString from 'query-string';\nimport StarRatingComponent from 'react-star-rating-component';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n    IconLookup,\n    IconDefinition,\n    findIconDefinition\n} from '@fortawesome/fontawesome-svg-core'\nimport styled from 'styled-components';\n\nimport { Match } from 'interfaces/RouteInterface';\nimport { getMyReview } from 'mockedData/myReview';\nimport { saveMyReview } from 'api/apiCalls';\nimport { DODGER_BLUE, PINK_SWAN, TANGERINE_YELLOW } from 'constants/colors';\nimport SmallText from 'styled/SmallText';\nimport LineSeparator from 'styled/LineSeparator';\nimport Loading from 'components/Loading/Loading';\nimport Modal from 'components/Modal/Modal';\n\nconst MyReviewPage = styled.div`\n    text-align: center;\n`;\n\nconst HeaderWrapper = styled.div`\n    color: white;\n    background-color: ${DODGER_BLUE};\n`;\n\nconst Button = styled.button`\n    display: inline-flex;\n    background-color: ${DODGER_BLUE};\n    border: none;\n    color: white;\n    font-size: 12px;\n    width: 5rem;\n    height: 2rem;\n    justify-content: center;\n    text-align: center;\n    padding: 0;\n`;\n\nconst FirmName = styled.div`\n    font-size: 16px;\n    display: inline-flex;\n    width: calc(100% - 10rem);\n    height: 2rem;\n    justify-content: center;\n    flex-direction: column;\n    text-align: center;\n`;\n\nconst StarsWrapper = styled.div`\n    & .dv-star-rating-empty-star {\n        color: red !important;\n    }\n`;\n\nconst ContentWrapper = styled.div`\n    padding: 0 0.5rem;\n`;\n\nconst BigStarEmpty = styled.div`\n    display: inline-block;\n    font-size: 34px;\n    text-align: center;\n    padding-right: 1rem;\n    color: ${PINK_SWAN};\n    margin-top: 0.7rem;\n`;\n\nconst BigStarFull = styled.div`\n    display: inline-block;\n    font-size: 34px;\n    text-align: center;\n    padding-right: 1rem;\n    color: ${TANGERINE_YELLOW};\n    margin-top: 0.7rem;\n`;\n\nconst StarExplained = styled.div`\n    margin: 0.5rem;\n`;\n\nconst NameInput = styled.input`\n    ::placeholder{\n        color: ${PINK_SWAN}90;\n    }\n    width: 100%;\n    height: 1.5rem;\n    font-size: 14px;\n    border: 0;\n`;\n\nconst CommentTextarea = styled.textarea`\n    ::placeholder{\n        color: ${PINK_SWAN}90;\n    }\n    width: 100%;\n    height: 3rem;\n    font-size: 14px;\n    border: 0;\n    padding: 0;\n`;\n\ninterface Props extends RouteComponentProps {\n    match: Match;\n}\n\ninterface QueryParams {\n    [key: string]: string | string[] | undefined;\n}\n\ninterface ScoreText {\n    [key: number]: string;\n\n}\n\nconst MyReview = (props: Props): React.ReactElement<Props> => {\n    const { match: { params: { firmId } } } = props;\n    const query: QueryParams = queryString.parse(props.location.search);\n    const myReview = getMyReview();\n\n    const [name, setName]: [string, any] = useState(String(query.reviewerName || ''));\n    const [comment, setComment]: [string, any] = useState(myReview.reviewComment);\n    const [score, setScore]: [number, any] = useState(Number(query.score));\n    const [showLoader, setShowLoader]: [boolean, any] = useState(false);\n    const [showModal, setShowModal]: [boolean, any] = useState(false);\n\n    const onStarClick = (value: number): void => { setScore(value); };\n\n    const scoreText: ScoreText = {\n        5: 'I loved it',\n        4: 'I liked it',\n        3: 'It was OK',\n        2: 'I didn\\'t like it',\n        1: 'I hated it',\n    };\n\n    const saveReview = (): void => {\n        setShowLoader(true);\n        saveMyReview({\n            firmId,\n            myReview: {\n                reviewerName: String(name),\n                reviewScore: score,\n                reviewComment: comment,\n            }\n        })\n            .then(() => {\n                setShowLoader(false);\n                setShowModal(true);\n            });\n    };\n\n    const onModalAction = (): void => {\n        props.history.push(`/review/${firmId}`);\n    }\n\n    const farStarLookup: IconLookup = { prefix: 'far', iconName: 'star' };\n    const farStarIconDefinition: IconDefinition = findIconDefinition(farStarLookup);\n    const fasStarLookup: IconLookup = { prefix: 'fas', iconName: 'star' };\n    const fasIconDefinition: IconDefinition = findIconDefinition(fasStarLookup);\n\n    return (\n        <MyReviewPage>\n            <Loading loading={showLoader} />\n            <Modal\n                show={showModal}\n                title=\"Thank you for your review\"\n                content=\"You're helping others make smarter decisions every day.\"\n                onButtonClick={onModalAction}\n            />\n            <HeaderWrapper>\n                <Button onClick={() => { props.history.goBack(); }}>Close</Button>\n                <FirmName>{query.firmName}</FirmName>\n                <Button onClick={saveReview}>Save</Button>\n            </HeaderWrapper>\n            <ContentWrapper>\n                <StarsWrapper>\n                    <StarRatingComponent\n                        name=\"MyReview\"\n                        value={score}\n                        onStarClick={onStarClick}\n                        renderStarIcon={(index, value) => index <= value ?\n                            (\n                                <BigStarFull>\n                                    <FontAwesomeIcon icon={fasIconDefinition} />\n                                </BigStarFull>\n                            ) :\n                            (\n                                <BigStarEmpty>\n                                    <FontAwesomeIcon icon={farStarIconDefinition} />\n                                </BigStarEmpty>\n                            )\n                        }\n\n                    />\n                </StarsWrapper>\n                <StarExplained>\n                    <SmallText>{scoreText[score]}</SmallText>\n                </StarExplained>\n                <LineSeparator />\n                <NameInput placeholder=\"Your name\" value={name} onChange={(event) => { setName(event.target.value); }}/>\n                <LineSeparator />\n                <CommentTextarea placeholder=\"Add more details on your experience...\" value={comment} onChange={(event) => { setComment(event.target.value); }} />\n                <LineSeparator />\n            </ContentWrapper>\n        </MyReviewPage>\n    );\n};\n\nexport default MyReview;\n","import React from 'react';\nimport { RouteComponentProps  } from 'react-router-dom';\n\ninterface IProps extends RouteComponentProps {\n\n};\n\nconst Error404 = (props: IProps) => {\n    setTimeout(() => props.history.push(`/`), 5000);\n    return (\n        <div>\n            Ops! Page not found! You will be redirected to homepage\n        </div> \n    )\n};\n\nexport default Error404;","import React from 'react';\nimport {BrowserRouter as Router, Redirect, Route, Switch} from 'react-router-dom';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faUserCircle } from '@fortawesome/free-solid-svg-icons';\nimport { faStar as farStar } from '@fortawesome/free-regular-svg-icons';\nimport { faStar as fasStar } from '@fortawesome/free-solid-svg-icons';\n\nimport Layout from 'components/Layout/Layout';\n// import Home from 'pages/Home/Home';\nimport Reviews from 'pages/Reviews/Reviews';\nimport MyReview from 'pages/MyReview/MyReview';\nimport Error404 from 'pages/Error404/Error404';\n\nlibrary.add(faUserCircle, farStar, fasStar);\n\nconst App = (): React.ReactElement<{}> => (\n    <Router basename={process.env.PUBLIC_URL}>\n        <Layout>\n            <Switch>\n                <Redirect exact from=\"/\" to=\"/review/dummy_firm\" />\n                <Route path=\"/review/:firmId\" component={Reviews} />\n                <Route path=\"/myreview/:firmId\" component={MyReview} />\n                <Route component={Error404} />\n            </Switch>\n        </Layout>\n    </Router>\n);\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ninterface Config {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n            window.location.href\n        );\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'index.css';\nimport App from 'App';\nimport * as serviceWorker from 'serviceWorker';\n\nconst rootEl = document.getElementById('root');\n\nReactDOM.render(<App />, rootEl);\n\nif (module.hot) {\n    module.hot.accept('./App', () => {\n        const NextApp = require('./App').default;\n        ReactDOM.render(\n            <NextApp />,\n            rootEl\n        );\n    });\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}